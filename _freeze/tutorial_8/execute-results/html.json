{
  "hash": "fa8a817bb7d6f87757c3122bbd0225c8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Tutorial 8: Bivariate linear regression\"\nauthor: \"Carlo Knotz\"\ntoc: true\nformat:\n  html: default\n  pdf: default\nlightbox: true\nlang: en\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n\n\n\n\n# Introduction\n\nThe ordinary least squares (OLS) or \"linear\" regression model is\nprobably *the* workhorse statistical model in (social) data analysis.\nCountless analyses use it, or variations of it, and all other more\nadvanced models such as logistic regression follow in essence the same\nlogic.\n\nIt is therefore important that you know how to estimate and interpret a\nlinear regression model in `R`, and how you can present the results in\nyour course paper or also a thesis or report. This is what you learn in\nthis tutorial.\n\nSpecifically, this tutorial will first walk you through the essential\ndata preparation steps. Then you will see how you estimate a *bviariate*\nlinear regression model with the `lm()` function. The last step is to\nshow you how you can present the results in an informative and professional\nway in your paper.\n\nTo illustrate all this, we will study the relationship between how educated people are and how much trust they have in politicians and international institutions using data from the *European Social Survey*.\n\n::: {.callout-tip}\n\n*Hvis du ønsker å lese en norsk tekst **i tillegg**: \"Lær deg R\",\nKapittel 7.*\n\n:::\n\n\\newpage\n\n# Hypotheses\n\nThe theory we work with here is that better educated people have more trust in politicians or political institutions, because they have resources (or what sociologists might call \"cultural capital\") that allow them to have a deeper understanding of political processes and the underlying processes.^[See e.g., Bourdieu, P. (1985). The forms of capital. In Richardson, J. G., editor, *Handbook of Theory and Research for the Sociology of Education*, pages 241–258. Greenwood, New York; Brady, H. E., Verba, S., and Schlozman, K. L. (1995). Beyond SES: A resource model of political participation. *American Political Science Review*, 89(2):271–294.] Also, a higher level of education enables people to deal with situations that are a bit messy or where there are no good options on the table. This should increase an understanding for how politicians and political institutions often work. And this as well should increase trust.\n\nThe main *alternative hypothesis* to be tested is therefore that: \n\n> *The more years of full-time education someone has completed, the higher their trust*\n> *in politicians or political institutions.*\n\nThe corresponding *null hypothesis* is then:\n\n> *Education is not related to trust in politicians or political institutions.*\n\n\\newpage\n\n# Setup\n\n## Packages & data download\n\nAs always, the first step in an analysis in `R` is to load all the\npackages we need (and install those that are not yet installed).\n\nIn this tutorial, you will directly work with a full dataset from the\n*European Social Survey (ESS)* --- *not* the small practice dataset that\nyou used before. Since the first step will again be to clean and prepare the data, you need the `tidyverse` package.\n\nTo load the package, you just use `library()` as before:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\n\n\n\nBut you will now also use a new\npackage that you do not yet know: `texreg`. This is a package that\nallows you to easily create nice-looking tables that contain the results\nof your regression models.\n\nTo be able to use `texreg`, you obviously need to install and then load\nit. Therefore, use `install.packages()` to install the package --- you\ncan run this in your *Console* since you will do this only once:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"texreg\")\n```\n:::\n\n\n\n\n\n\nWhen the installation is complete, use `library()` to load the package and document this in your script file:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(texreg)\n```\n:::\n\n\n\n\n\n\n\\newpage\n## Data import\n\nYou should by now know how to import and \"trim\" ESS data, so this part will be\nbrief and without an example code chunk:\n\n1.  Use `haven::read_dta()` to import the ESS round 7 (2014) dataset; save it as\n    `ess7` in *RStudio*.\n2.  Transform the dataset into the familiar format using\n    `labelled::unlabelled()`;\n3.  Trim the dataset:\n    + Keep only observations from Norway;\n    + Select the following variables: `essround`, `idno`, `cntry`,\n    `trstplt` (trust in politicians), and `eduyrs`;\n    + Use the pipe to link everything;\n    + Save the trimmed dataset as `ess7`;\n4.  If you like, create a data dictionary using `labelled::generate_dictionary()`;\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n\\newpage\nThe two main variables for the main part of this tutorial are `trstplt` and `eduyrs`.\n`trstplt` measures how much trust people have in politicians in general.\nSpecifically, respondents were asked to rate on a scale from 0 (\"No\ntrust at all\") to 10 (\"Complete trust\") how much they trust different\npolitical institutions and actors --- and politicians were one of them.\nThis will be the *dependent* variable here.\n\nYou can learn more about the variable if you use the `attributes()`\nfunction:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattributes(ess7$trstplt)\n```\n:::\n\n\n\n\n\n\nWe will use the `eduyrs` variable to measure people's level of\neducation. `eduyrs` measures how many years of full-time education a\ngiven respondent has completed. Obviously, this is not a perfectly\naccurate measurement (some people might spend a lot of time in\neducation, but without success), but it can be used as a *proxy* (i.e., \"approximate measurement\") for\neducation.\n\nUse the data dictionary and the `attributes()` and other relevant\nfunctions to get familiar with the `eduyrs` variable.\n\n\n\n\\newpage\n\n## Data preparation\n\nYou might have noticed already that the dependent variable is not stored\nas a numeric or linear variable but as a *factor*. This means that you\ncannot do any calculations with it in this form --- and that includes\nobviously also linear regression.\n\nTherefore, you first have to convert the `trstplt` variable to a numeric\nvariable. As before, this involves using the `as.numeric()` function\nwhile subtracting 1 to account for the divergence between the text\nlabels and the underlying numerical values:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ness7$trstplt_num <- as.numeric(ess7$trstplt) - 1\n```\n:::\n\n\n\n\n\n\n\\newpage\n\n# Descriptive and bivariate analysis\n\n## Norwegians' trust in politicians\nWith the new numeric variable in hand, you can create a graph that shows how it is distributed. You should always show this if you are writing a research paper or report:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ness7 %>% \n  ggplot(aes(x = trstplt_num)) +\n    geom_bar() +\n    scale_x_continuous(breaks = seq(from = 0, to = 10, by = 1)) +\n    labs(x = \"''How much do you trust politicians?''\",\n         y = \"Observations\",\n         caption = \"(0 = ''No trust at all''; 10 = ''Complete trust'')\") +\n    theme_bw()\n```\n\n::: {.cell-output-display}\n![](tutorial_8_files/figure-html/climhist-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\nThe distribution is concentrated around the mid-to-high values (5-7), which indicates that Norwegians have an overall moderately high level of trust in their politicians. But only very few respondents said they have \"complete trust\" (10), and there are at least a few respondents that have low levels of trust (0-4).\n\n\\newpage\n## Descriptive table\n\nIt is also a good idea to give your readers descriptive statistics that help them see how your variables look like. Since you have two *numeric* or *linear* variables, a simple table with summary statistics would be appropriate:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbst290::oppsumtabell(dataset = ess7,\n                     variables = c(\"trstplt_num\",\"eduyrs\"))\n Variable        trstplt_num eduyrs \n Observations    1429.00     1434.00\n Average            5.26       13.85\n 25th percentile    4.00       11.00\n Median             5.00       14.00\n 75th percentile    7.00       17.00\n Stand. Dev.        1.95        3.72\n Minimum            0.00        0.00\n Maximum           10.00       30.00\n Missing            7.00        2.00\n```\n:::\n\n\n\n\n\n\nYou would of course describe this table in more detail in your paper or report, but we will skip this now for the sake of brevity.\n\n\\newpage\n## Bivariate analysis\n\nIt usually makes sense to do some simpler bivariate tests before you do a (more complicated) regression analysis. Both the dependent and the independent variable are *continuous*, so the appropriate bivariate test would be to calculate the Pearson correlation coefficient for the two variables and to test if this coefficient is significantly different from 0 (as you know from the previous tutorial):\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncor.test(x = ess7$eduyrs,\n         y = ess7$trstplt_num,\n         method = \"pearson\")\n\n\tPearson's product-moment correlation\n\ndata:  ess7$eduyrs and ess7$trstplt_num\nt = 5.3783, df = 1425, p-value = 8.779e-08\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.08981487 0.19154010\nsample estimates:\n      cor \n0.1410498 \n```\n:::\n\n\n\n\n\n\nThe test shows that the two variables are weakly *positively* correlated with a correlation coefficient of 0.14. Can you tell if this correlation is statistically significant (hint: check the *p*-value!)?\n\n\\newpage\n# Regression analysis\n\nNow we spent quite a bit of time on the tedious but unfortunately necessary data cleaning part. Luckily, the analysis-part is much more straightforward since `R` has a built-in function to estimate linear regression models.\n\nThe only important thing you need to understand is what a *model formula* is and how you specify it. This comes now.\n\n## Models & formulas\n\nWhenever you estimate *any* regression model in `R` --- be it a simple linear regression or more advanced models -- you always need to specify the *formula* for the model.\n\nThe formula (or equation) is, in essence, nothing else than a statement about what your dependent and independent variables are and how they are related to each other. In the case here, we expect that people's trust in politicians (measured via the `trstplt_num` variable) increases with their level of education (measured with `eduyrs`).\n\nExpressed as a formula, this would look like this:\n\\begin{align*}\n  \\texttt{trstplt\\_num} = \\alpha + \\beta_1 \\texttt{eduyrs} + \\epsilon\n\\end{align*}\n\nAs you know from the chapters on linear regression in Kellstedt & Whitten (see alternatively Solbakken, *Statistikk for Nybeginnere*, Chapter 6):\n\n* $\\alpha$ is the intercept (*konstantleddet* in Norwegian)\n* $\\beta_1$ is the regression coefficient (or *\"slope\"*, *\"weight\"*, *regresjonskoeffisient*, or *stigningstall*). \n* $\\epsilon$ is the error term --- this term captures the variation in the dependent variable that the model cannot explain (see also Solbakken, *Statistikk for Nybeginnere*, p. 177).\n\n\\newpage\nIn `R`, this formula looks much simpler:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\ntrstplt_num ~ eduyrs\n\n```\n:::\n\n\n\n\n\n\n\nThere are two interesting things to notice:\n\n1. We do not use the equal sign (`=`) but the tilde (`~`). This indicates that *we do not know* if there really is a relationship between the dependent variable `trstplt_num` and `eduyrs` --- we are only *estimating* if there is one!\n\n2. All you have to do is to specify the dependent and the independent variable(s). `R` takes care of the intercept and the error term automatically.\n\n\\newpage\n\n## Estimating linear regression models: The `lm()` function\n\nNow that you have the formula for the regression model, you just need to plug it into the `R` function to estimate linear regression models: the `lm()` (\"linear models\") function.\n\nThe `lm()` function needs as inputs:\n\n1. The *formula* (as just described)\n2. The dataset that should be used\n\nThe following code estimates the model and then saves the result as `model1`:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\nmodel1 <- lm(trstplt_num ~ eduyrs,\n             data = ess7)\n\n```\n:::\n\n\n\n\n\n\n`R` will not automatically show you the results --- to see them, you need to print out a summary with `summary()`:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(model1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = trstplt_num ~ eduyrs, data = ess7)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-5.7148 -1.1966  0.0996  1.4332  5.0256 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  4.23401    0.19737  21.452  < 2e-16 ***\neduyrs       0.07404    0.01377   5.378 8.78e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.932 on 1425 degrees of freedom\n  (9 observations deleted due to missingness)\nMultiple R-squared:  0.0199,\tAdjusted R-squared:  0.01921 \nF-statistic: 28.93 on 1 and 1425 DF,  p-value: 8.779e-08\n```\n\n\n:::\n:::\n\n\n\n\n\n\nThe output is very `R`-typical: technical and condensed. Focus on the following:\n\n1. The `Coefficients:`-table. First, you see two coefficients listed, the `(Intercept)` and `eduyrs`. These show you what the model includes: an intercept and a single independent variable (`eduyrs`).\n2. In the columns to the right, you see `Estimate`, `Std. Error`, `t value`, and `Pr(>|t|)` printed:\n    + The `Estimate`s are the coefficients themselves --- the $\\alpha$ (for the intercept) and the $\\beta$s or *regression coefficients*;\n    + The `Std. Error`s are, as the name suggests, the standard errors of the coefficients.\n    + The `t value`s are the ratios of the coefficients and their standard errors: $\\frac{\\texttt{Estimate}}{\\texttt{Std. Error}}$.^[See for yourself: Divide a coefficient by its standard error and see what the result is.] You can interpret the `t values` like those from a *t*-test, only the test here is whether a given coefficient is equal to `0` or not.\n    + `Pr(>|t|)` are the *p*-values.\n    + The asterisks are an alternative way to indicate *p*-values. Three asterisks correspond to a *p*-value of 0.001 or less. This is also explained in the legend (`Signif. codes`)\n\nKellstedt & Whitten (2018, Chapter 9) or Solbakken (*Statistikk for Nybeginnere*, Chapters 6 & 8) explain how you make sense of these numbers (also: feel free to ask during class!).\n\n<!-- **Here is how you read the output:** -->\n\n<!-- * Start with the intercept, which has an *Estimate* value of around 4.23. This means: The model predicts that, when `eduyrs` is exactly equal to `0` --- when someone has zero years of education --- they have, on average, a score of 4.23 on the `trstplt_num` variable. In substantive terms, this means that someone who did not complete a single year of education has only a low-to-moderate level of trust in politicians. -->\n\n<!-- * The `eduyrs` coefficient is around 0.074. This means that when `eduyrs` *increases* by one, `trstplt_num` *increases* also by 0.074 points. In other words, for every additional year of education completed, a person's predicted level of trust in politicians increases by 0.074 points. Put even more simply, there is a *positive* relationship between education and trust in politicians --- the more education someone has, the higher their trust in politicians. Looking at the *p*-value and the significance stars, you can also see that the effect is *statistically significant*: We can therefore *reject the null hypothesis* and conclude that the positive effect of education on trust (likely) also exists in the wider Norwegian population and not only in the sample we are working with here. -->\n\n\\newpage\n\nIf you find this still difficult to grasp then it might help to look at a visualization of the model's main result, which is shown in the graph below:\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](tutorial_8_files/figure-html/mod1preds-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n**First, focus on the black line with the dots**. If you start at the point where `eduyrs` is zero, you see that the predicted value of `trstplt_num` is just a bit over 4. If you now go back to the result, is there a similar number? \n\nYou can also clearly see that there is a *positive* relationship between the two variables: As `eduyrs` increases, `trstplt_num` increases as well. If you look more carefully, you also see that `trstplt_num` increases only by a small amount for every additional year of education completed. Can you find out in the detailed results above by how much *exactly* `trstplt_num` changes?\n\nYou should also notice the gray-shaded area around the black line. This area indicates the *confidence intervals* for the predicted values. These confidence intervals reflect the fact that we are working with *estimates* based on a *sample*. You interpret these the same way as you interpreted the confidence intervall for a sample mean a few weeks ago.\n\n\n## Presenting the regression results in a publication-quality table\n\nMaking sense of the results for yourself is of course only a part of your job as a (social) data analyst. The next step is to present them to the readers of your course paper, thesis, or report.\n\nWhen you report results like these, you should never simply copy and paste the results from `R` into your document. Instead, you should always present them in a clean and organized table. And this is in fact quite easy to do with the `texreg` package that you installed and loaded earlier! This package is specifically designed to transform regression results from `R` into publication-quality tables.\n\nAs a first step, it makes sense to print a preview of the table to your *Console*. To do this, you use the `screenreg()` function from the `texreg` package. Also, the table is supposed to show the results of the model that we estimated earlier (`model1`), so we specify that within the list (`list()`) of results we want to have in the table):\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nscreenreg(list(model1))\n\n========================\n             Model 1    \n------------------------\n(Intercept)     4.23 ***\n               (0.20)   \neduyrs          0.07 ***\n               (0.01)   \n------------------------\nR^2             0.02    \nAdj. R^2        0.02    \nNum. obs.    1427       \n========================\n*** p < 0.001; ** p < 0.01; * p < 0.05\n```\n:::\n\n\n\n\n\n\nThe table shows you in essence the same information as the `R` output above, but in a more organized fashion. You see the coefficient for `eduyrs` and the intercept plus their standard errors and stars that indicate the corresponding *p*-values. Further below, you also see summary statistics including the $R^2$, the adjusted $R^2$, and the number of observations. At the very bottom, you see a legend that tells you how different stars (*asterisks*) correspond to different *p*-values. For example, three asterisks would indicate a *p*-value of less than 0.001.\n\n\n\\newpage\n\nYou can still make this table a bit prettier by adding proper labels for the coefficients (never report the \"raw\" coefficient names --- your readers don't know what they mean!)^[I'm only doing this here to help you make sense of the code and the results. I would not do this in a research article that I want to publish.] and by trimming the significance stars (one is enough):\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\nscreenreg(list(model1),\n          custom.coef.names = c(\"Intercept\",\n                                \"Years of educ. completed\"),\n          stars = 0.05)\n\n===================================\n                          Model 1  \n-----------------------------------\nIntercept                    4.23 *\n                            (0.20) \nYears of educ. completed     0.07 *\n                            (0.01) \n-----------------------------------\nR^2                          0.02  \nAdj. R^2                     0.02  \nNum. obs.                 1427     \n===================================\n* p < 0.05\n```\n:::\n\n\n\n\n\n\nThis version is O.K. for now. Next, you use the `wordreg()` function to export the table to a Microsoft Word document. The settings stay the same, but you now also need to specify a name for the Word document that will contain your table with the `file`-option:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\nwordreg(list(model1),\n          custom.coef.names = c(\"Intercept\",\n                                \"Years of educ. completed\"),\n          stars = 0.05,\n        file = \"bivariate_model.doc\")\n\n```\n:::\n\n\n\n\n\n\nAnd done! If you open that document, you should see the final table with the results (which you can polish more in Word).\n\n\\newpage\n\n# Conclusion\n\nNow you know how to estimate and interpret a linear regression model in `R`.\n\nIn addition, you also know how to present the results of your regression analysis in a useful and profession way. Don't underestimate how relevant this is --- this is one of these famous \"communication\" skills that people keep talking about!\n\nAs always, you find de-bugging exercises in the usual place. When you do the de-bugging tutorial on bivariate regression, you will look into a different research question: *Why are some people happier than others?*\n\n\n<!-- **Assumption: You have gone through the entire tutorial, step by step and without errors, until here.** -->\n\n<!-- ## Trust in the United Nations -->\n\n<!-- The ESS dataset includes more variables related to trust in political institutions. One of these measures people's trust in the United Nations and is called `trstun`, and you should have kept this variable during the initial data \"trimming\" earlier. Like `trstplt`, `trstun` ranges from 0 (\"No trust at all\") to 10 (\"Complete trust\"). In the exercise, you will test if people's level of education is also related to their trust in the UN as an institution. -->\n\n<!-- 1. Do an exploratory data analysis of the `trstun` variable. How is it stored in `R`? Do you need to apply any transformations before you can use it in a regression analysis? If yes, transform the variable as needed. -->\n<!-- 2. Make a graph that shows how the `trstun` variable (or any transformed versions of it) is distributed; -->\n<!-- 3. Estimate an OLS model in which you regress `trstun` (or any transformed versions of it) on `eduyrs`; -->\n<!-- 4. Interpret the results -->\n<!-- 5. Present the results in a nice-looking table using `texreg` -->\n\n<!-- ## De-bugging exercises -->\n",
    "supporting": [
      "tutorial_8_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}